from spack.package import *


class Tplbuilder(CMakePackage):

    homepage = "https://re-git.lanl.gov/xcap/oss/solvers/tpl-builder"
    git = "ssh://git@re-git.lanl.gov:10022/xcap/oss/solvers/tpl-builder.git"

    version("master", tag="master")

    
    variant("mpi", default=True, description="build with mpi")
    variant("lapack", default=False)
    variant("boost", default=False)
    variant("cabana", default=False)
    variant("catch2", default=False)
    variant("fftw", default=False)
    variant("hdf5", default=False)
    variant("hypre", default=False)
    variant("kokkos", default=False)
    variant("lapack_wrappers", default=False)#this one will likely give issues since I dont think we have a spackage for it yet
    variant("libmesh", default=False)
    variant("matlab", default=False)
    variant("netcdf", default=False)
    variant("ogre", default=False)    
    variant("openblas", default=False)    
    variant("petsc", default=False)    
    variant("qt", default=False)    
    variant("qwt", default=False)    
    variant("raja", default=False)    
    variant("samrai", default=False)    
    variant("samrsolvers", default=False)    
    variant("samrutils", default=False)    
    variant("silo", default=False)    
    variant("stacktrace", default=False)    #TODO will probably need add the stacktrace spackage repo to the tpl spack env
    variant("sundials", default=False)    
    variant("thrust", default=False)    
    variant("timer", default=False)    
    variant("trilinos", default=False)    
    variant("umpire", default=False)    
    variant("xbraid", default=False)    
    variant("zlib", default=False)    
#    variant()
# TODO include all TPLS



    depends_on("cmake@3.26.0:", type="build")
    depends_on("mpi", when="+mpi")
    depends_on("timerutility+mpi", when="+timer+mpi")
    depends_on("timerutility~mpi", when="+timer~mpi")
    depends_on("hypre", when="+hypre")
    depends_on("lapack", when="+lapack")#TODO should this be a required dependencie?
    depends_on("boost", when="+boost")
    depends_on("cabana", when="+cabana")
    depends_on("catch2", when="+catch2")
    depends_on("openblas", when="+openblas")
    install_targets=[]

    def cmake_args(self):

        args = [
            "-DINSTALL_DIR:PATH="+self.spec.prefix,
            "-DCXX_STD=17",
        ]

        #TODO include all TPLs in cmake args using the path to their spack installed binaries I think this can be done with "<TPL>_INSTALL_DIR"?
        archive_dir="/usr/projects/xcap/oss/projects/solvers/archives/"
        all_tpls = ["lapack", "boost", "cabana", "catch2", "fftw", "hdf5", "hypre", "kokkos", "lapack_wrappers", "libmesh", "matlab", "netcdf", "ogre", "openblas", "petsc", "qt", "qwt", "raja", "samrai", "samrsolvers", "samrutils", "silo", "stacktrace", "sundials", "thrust", "timer", "trilinos", "umpire", "xbraid", "zlib"]
        #all_tpls = ["hypre","lapack","timer","metis"] #we can probably use the spec string to get this, or to get the variants that are turned on - maybe "self.spec" or str(spec)?
        install_dirs = []
        tpl_list = []
        for tpl in all_tpls:
            if self.spec.satisfies("+"+tpl):
                tpl_list.append(tpl.upper())
                args.append("-D" + tpl.upper() + "_INSTALL_DIR=" + self.spec[tpl].prefix)

        #TODO add to this list instead of overwriding it
        args.append("-DTPL_LIST:STRING=" + ';'.join(tpl_list))

        if self.spec.satisfies("^mpi"):
            args.append("-DCMAKE_CXX_COMPILER=mpicxx")
        return args

#    def install(self):
#        pass
