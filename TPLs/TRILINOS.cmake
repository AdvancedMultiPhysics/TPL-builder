# This will configure and build trilinos
# User can configure the source path by specifying TRILINOS_SRC_DIR,
#    the download path by specifying TRILINOS_URL, or the installed 
#    location by specifying TRILINOS_INSTALL_DIR


# Intialize download/src/install vars
SET( TRILINOS_BUILD_DIR "${CMAKE_BINARY_DIR}/TRILINOS-prefix/src/TRILINOS-build" )
IF ( TRILINOS_URL ) 
    MESSAGE_TPL("   TRILINOS_URL = ${TRILINOS_URL}")
    SET( TRILINOS_SRC_DIR "${CMAKE_BINARY_DIR}/TRILINOS-prefix/src/TRILINOS-src" )
    SET( TRILINOS_CMAKE_URL            "${TRILINOS_URL}"     )
    SET( TRILINOS_CMAKE_DOWNLOAD_DIR   "${TRILINOS_SRC_DIR}" )
    SET( TRILINOS_CMAKE_SOURCE_DIR     "${TRILINOS_SRC_DIR}" )
    SET( TRILINOS_CMAKE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/trilinos" )
    SET( CMAKE_BUILD_TRILINOS TRUE )
ELSEIF ( TRILINOS_SRC_DIR )
    VERIFY_PATH("${TRILINOS_SRC_DIR}")
    MESSAGE_TPL("   TRILINOS_SRC_DIR = ${TRILINOS_SRC_DIR}")
    SET( TRILINOS_CMAKE_URL            ""                  )
    SET( TRILINOS_CMAKE_DOWNLOAD_DIR   ""                  )
    SET( TRILINOS_CMAKE_SOURCE_DIR     "${TRILINOS_SRC_DIR}" )
    SET( TRILINOS_CMAKE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/trilinos" )
    SET( CMAKE_BUILD_TRILINOS TRUE )
ELSEIF ( TRILINOS_INSTALL_DIR ) 
    SET( TRILINOS_CMAKE_INSTALL_DIR "${TRILINOS_INSTALL_DIR}" )
    SET( CMAKE_BUILD_TRILINOS FALSE )
ELSE()
    MESSAGE(FATAL_ERROR "Please specify TRILINOS_SRC_DIR, TRILINOS_URL, or TRILINOS_INSTALL_DIR")
ENDIF()
SET( TRILINOS_INSTALL_DIR "${TRILINOS_CMAKE_INSTALL_DIR}" )
MESSAGE_TPL( "   TRILINOS_INSTALL_DIR = ${TRILINOS_INSTALL_DIR}" )
FILE( APPEND "${CMAKE_INSTALL_PREFIX}/TPLs.cmake" "SET(TRILINOS_INSTALL_DIR \"${TRILINOS_INSTALL_DIR}\")\n" )


# Configure trilinos
IF ( CMAKE_BUILD_TRILINOS )
    SET( TRILINOS_DEPENDS LAPACK )
    SET( CONFIGURE_OPTIONS "${CMAKE_ARGS};-DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX}/trilinos" )
    SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}" )
    SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DTPL_ENABLE_MPI:BOOL=ON" )
    SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DTPL_BLAS_LIBRARIES:STRING=${BLAS_LIBS}" )
    SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DTPL_LAPACK_LIBRARIES:STRING=${LAPACK_LIBS}" )
    IF ( BOOST_INSTALL_DIR )
        SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DBoost_INCLUDE_DIRS=${BOOST_INSTALL_DIR}/include" )
        SET( TRILINOS_DEPENDS ${TRILINOS_DEPENDS} BOOST )
    ENDIF()
    SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DTPL_ENABLE_Matio=OFF" )
    IF ( ${CXX_STD} STREQUAL 98 )
        SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DTrilinos_ENABLE_CXX11=OFF" )
    ELSEIF ( ( ${CXX_STD} STREQUAL 11 ) OR ( ${CXX_STD} STREQUAL 14 ) )
        SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DTrilinos_ENABLE_CXX11=ON" )
    ENDIF()
    IF ( TRILINOS_PACKAGES )
        STRING( REPLACE "," ";" TRILINOS_PACKAGES "${TRILINOS_PACKAGES}" )
        FOREACH( package ${TRILINOS_PACKAGES} )
            SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DTrilinos_ENABLE_${package}:BOOL=ON" )
        ENDFOREACH()
    ELSE()
        SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DTrilinos_ENABLE_ALL_PACKAGES:BOOL=ON" )
    ENDIF()
    STRING( REPLACE "," ";" TRILINOS_EXTRA_PACKAGES "${TRILINOS_EXTRA_PACKAGES}" )
    FOREACH( package ${TRILINOS_EXTRA_PACKAGES} )
        SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DTrilinos_ENABLE_${package}:BOOL=ON" )
    ENDFOREACH()
    STRING( REPLACE "," ";" TRILINOS_EXTRA_REPOSITORIES "${TRILINOS_EXTRA_REPOSITORIES}" )
    FOREACH( repo ${TRILINOS_EXTRA_REPOSITORIES} )
        SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};-DTrilinos_EXTRA_REPOSITORIES=${repo}" )
    ENDFOREACH()
    STRING( REPLACE "," ";" TRILINOS_EXTRA_FLAGS "${TRILINOS_EXTRA_FLAGS}" )
    FOREACH( flags ${TRILINOS_EXTRA_FLAGS} )
        SET( CONFIGURE_OPTIONS "${CONFIGURE_OPTIONS};${flags}" )
    ENDFOREACH()
    SET( PARALLEL_BUILD_OPTIONS )
    IF ( PROCS_INSTALL )
        IF ( ${PROCS_INSTALL} GREATER "1" )
            SET( PARALLEL_BUILD_OPTIONS -j ${PROCS_INSTALL} )
        ENDIF()
    ENDIF()
ENDIF()


# Configure trilinos
IF ( CMAKE_BUILD_TRILINOS )
    EXTERNALPROJECT_ADD(
        TRILINOS
        URL                 "${TRILINOS_CMAKE_URL}"
        DOWNLOAD_DIR        "${TRILINOS_CMAKE_DOWNLOAD_DIR}"
        SOURCE_DIR          "${TRILINOS_CMAKE_SOURCE_DIR}"
        UPDATE_COMMAND      ""
        BUILD_IN_SOURCE     0
        INSTALL_DIR         ${CMAKE_INSTALL_PREFIX}/trilinos
        CMAKE_ARGS          "${CONFIGURE_OPTIONS}"
        BUILD_COMMAND       ${CMAKE_MAKE_PROGRAM} install ${PARALLEL_BUILD_OPTIONS} VERBOSE=1
        DEPENDS             ${TRILINOS_DEPENDS}
        LOG_DOWNLOAD 1   LOG_UPDATE 1   LOG_CONFIGURE 1   LOG_BUILD 1   LOG_TEST 1   LOG_INSTALL 1
    )
    ADD_TPL_SAVE_LOGS( TRILINOS )
    ADD_TPL_CLEAN( TRILINOS )
ELSE()
    ADD_TPL_EMPTY( TRILINOS )
ENDIF()


# Add the appropriate fields to FindTPLs.cmake
CONFIGURE_FILE( ${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindTrilinos.cmake "${CMAKE_INSTALL_PREFIX}/cmake/FindTrilinos.cmake" COPYONLY )
FILE( APPEND "${FIND_TPLS_CMAKE}" "\n# Find TRILINOS\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "IF ( TPLs_FIND_TRILINOS AND NOT TPL_FOUND_TRILINOS )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    INCLUDE( \"${CMAKE_INSTALL_PREFIX}/cmake/FindTrilinos.cmake\" )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( TRILINOS_DIR \"${TRILINOS_INSTALL_DIR}\" )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( TRILINOS_DIRECTORY \"${TRILINOS_INSTALL_DIR}\" )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( TRILINOS_INCLUDE \"${TRILINOS_INSTALL_DIR}/include\" )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    # Get the trilinos version\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    TRILINOS_GET_VERSION()\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    # Set the subpackages we want to use\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    TRILINOS_SET_SUBPACKAGES()\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    # Get the trilinos libraries\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    IF (EXISTS \"${TRILINOS_INSTALL_DIR}/lib/cmake/Trilinos/TrilinosConfig.cmake\")\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "        INCLUDE(\"${TRILINOS_INSTALL_DIR}/lib/cmake/Trilinos/TrilinosConfig.cmake\")\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "        SET( CMAKE_INSTALL_RPATH $\{CMAKE_INSTALL_RPATH} \"$\{Trilinos_SHARED_LIB_RPATH_COMMAND}\" )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "        LIST(REMOVE_DUPLICATES Trilinos_LIBRARIES)\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "        SET( TRILINOS_COMPONENTS_LIST $\{Trilinos_LIBRARIES} )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "        FOREACH( tmp ${TRILINOS_COMPONENTS_LIST} )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "            set_target_properties( ${tmp} PROPERTIES IMPORTED_LOCATION $\{Trilinos_LIBRARY_DIRS} )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "        ENDFOREACH()\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "        SET( TRILINOS_LIBS $\{TRILINOS_COMPONENTS_LIST} )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    ELSE()\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "        TRILINOS_SET_LIBRARIES()\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    ENDIF()\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( TPL_INCLUDE_DIRS $\{TPL_INCLUDE_DIRS} $\{TRILINOS_INCLUDE} )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( TPL_LIBRARIES $\{TRILINOS_LIBS} $\{TPL_LIBRARIES} )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( TRILINOS_FOUND TRUE )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( TPL_FOUND_TRILINOS TRUE )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "ENDIF()\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "\n" )


