# This will configure and build sundials
# User can configure the source path by specifying SUNDIALS_SRC_DIR,
#    the download path by specifying SUNDIALS_URL, or the installed 
#    location by specifying SUNDIALS_INSTALL_DIR


# Intialize download/src/install vars
SET( SUNDIALS_BUILD_DIR "${CMAKE_BINARY_DIR}/SUNDIALS-prefix/src/SUNDIALS-build" )
IF ( SUNDIALS_URL ) 
    MESSAGE_TPL("   SUNDIALS_URL = ${SUNDIALS_URL}")
    SET( SUNDIALS_CMAKE_URL            "${SUNDIALS_URL}"       )
    SET( SUNDIALS_CMAKE_DOWNLOAD_DIR   "${SUNDIALS_BUILD_DIR}" )
    SET( SUNDIALS_CMAKE_SOURCE_DIR     "${SUNDIALS_BUILD_DIR}" )
    SET( SUNDIALS_CMAKE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/sundials" )
    SET( CMAKE_BUILD_SUNDIALS TRUE )
ELSEIF ( SUNDIALS_SRC_DIR )
    VERIFY_PATH("${SUNDIALS_SRC_DIR}")
    MESSAGE_TPL("   SUNDIALS_SRC_DIR = ${SUNDIALS_SRC_DIR}")
    SET( SUNDIALS_CMAKE_URL            "${SUNDIALS_SRC_DIR}"   )
    SET( SUNDIALS_CMAKE_DOWNLOAD_DIR   "${SUNDIALS_BUILD_DIR}" )
    SET( SUNDIALS_CMAKE_SOURCE_DIR     "${SUNDIALS_BUILD_DIR}" )
    SET( SUNDIALS_CMAKE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/sundials" )
    SET( CMAKE_BUILD_SUNDIALS TRUE )
ELSEIF ( SUNDIALS_INSTALL_DIR ) 
    SET( SUNDIALS_CMAKE_INSTALL_DIR "${SUNDIALS_INSTALL_DIR}" )
    SET( CMAKE_BUILD_SUNDIALS FALSE )
ELSE()
    MESSAGE(FATAL_ERROR "Please specify SUNDIALS_SRC_DIR, SUNDIALS_URL, or SUNDIALS_INSTALL_DIR")
ENDIF()
IF ( ${CMAKE_BUILD_TYPE} STREQUAL "Debug" )
    SET( METHOD dbg )
ELSEIF ( ${CMAKE_BUILD_TYPE} STREQUAL "Release" )
    SET( METHOD opt )
ELSE()
    MESSAGE ( FATAL_ERROR "Unknown CMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}" )
ENDIF()
NULL_USE( SUNDIALS_INSTALL_DIR SUNDIALS_SRC_DIR SUNDIALS_URL_DIR )
SET( SUNDIALS_INSTALL_DIR "${SUNDIALS_CMAKE_INSTALL_DIR}" )
MESSAGE_TPL( "   SUNDIALS_INSTALL_DIR = ${SUNDIALS_INSTALL_DIR}" )
FILE( APPEND "${CMAKE_INSTALL_PREFIX}/TPLs.cmake" "SET(SUNDIALS_INSTALL_DIR \"${SUNDIALS_INSTALL_DIR}\")\n" )


# Configure sundials
IF ( CMAKE_BUILD_SUNDIALS )
    SET( CONFIGURE_OPTIONS )
    SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --prefix=${CMAKE_INSTALL_PREFIX}/sundials )
    SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --with-mpicc=${CMAKE_C_COMPILER} )
    SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --with-mpif77=${CMAKE_Fortran_COMPILER} )
    IF ( ENABLE_SHARED AND ENABLE_STATIC )
        MESSAGE(FATAL_ERROR "Compiling sundials with both static and shared libraries is not supported")
    ELSEIF ( ENABLE_SHARED )
        SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --enable-shared --disable-static )
    ELSEIF ( ENABLE_STATIC )
        SET( CONFIGURE_OPTIONS ${CONFIGURE_OPTIONS} --disable-shared --enable-static )
    ENDIF()
ENDIF()


# Build sundials
IF ( CMAKE_BUILD_SUNDIALS )
    EXTERNALPROJECT_ADD( 
        SUNDIALS
        URL                 "${SUNDIALS_CMAKE_URL}"
        DOWNLOAD_DIR        "${SUNDIALS_CMAKE_DOWNLOAD_DIR}"
        SOURCE_DIR          "${SUNDIALS_CMAKE_SOURCE_DIR}"
        UPDATE_COMMAND      ""
        CONFIGURE_COMMAND   ${SUNDIALS_BUILD_DIR}/configure --prefix=${CMAKE_INSTALL_PREFIX}/sundials ${CONFIGURE_OPTIONS}
        BUILD_COMMAND       make -j ${PROCS_INSTALL} METHOD=${METHOD} VERBOSE=1
        BUILD_IN_SOURCE     1
        INSTALL_COMMAND     make install
        DEPENDS             
        LOG_DOWNLOAD 1   LOG_UPDATE 1   LOG_CONFIGURE 1   LOG_BUILD 1   LOG_TEST 1   LOG_INSTALL 1
    )
    ADD_TPL_SAVE_LOGS( SUNDIALS )
    ADD_TPL_CLEAN( SUNDIALS )
ELSE()
    ADD_TPL_EMPTY( SUNDIALS )
ENDIF()


