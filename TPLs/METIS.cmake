# This will configure and build metis
# User can configure the source path by specifying METIS_SRC_DIR,
#    the download path by specifying METIS_URL, or the installed 
#    location by specifying METIS_INSTALL_DIR


# Intialize download/src/install vars
SET( METIS_BUILD_DIR "${CMAKE_BINARY_DIR}/METIS-prefix/src/METIS-build" )
IF ( METIS_URL ) 
    MESSAGE("   METIS_URL = ${METIS_URL}")
    SET( METIS_CMAKE_URL            "${METIS_URL}"       )
    SET( METIS_CMAKE_DOWNLOAD_DIR   "${METIS_BUILD_DIR}" )
    SET( METIS_CMAKE_SOURCE_DIR     "${METIS_BUILD_DIR}" )
    SET( METIS_CMAKE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/metis" )
    SET( CMAKE_BUILD_METIS TRUE )
ELSEIF ( METIS_SRC_DIR )
    VERIFY_PATH("${METIS_SRC_DIR}")
    MESSAGE("   METIS_SRC_DIR = ${METIS_SRC_DIR}")
    SET( METIS_CMAKE_URL            "${METIS_SRC_DIR}"   )
    SET( METIS_CMAKE_DOWNLOAD_DIR   "${METIS_BUILD_DIR}" )
    SET( METIS_CMAKE_SOURCE_DIR     "${METIS_BUILD_DIR}" )
    SET( METIS_CMAKE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/metis" )
    SET( CMAKE_BUILD_METIS TRUE )
ELSEIF ( METIS_INSTALL_DIR ) 
    SET( METIS_CMAKE_INSTALL_DIR "${METIS_INSTALL_DIR}" )
    SET( CMAKE_BUILD_METIS FALSE )
ELSE()
    MESSAGE(FATAL_ERROR "Please specify METIS_SRC_DIR, METIS_URL, or METIS_INSTALL_DIR")
ENDIF()
SET( METIS_INSTALL_DIR "${METIS_CMAKE_INSTALL_DIR}" )
MESSAGE( "   METIS_INSTALL_DIR = ${METIS_INSTALL_DIR}" )


# Configure optional/required TPLs
CONFIGURE_DEPENDENCIES( METIS REQUIRED GKLIB )


# Configure metis
IF ( CMAKE_BUILD_METIS )
  
    SET( METIS_CONFIGURE_OPTIONS prefix=${METIS_INSTALL_DIR} )
    SET( METIS_CONFIGURE_OPTIONS ${METIS_CONFIGURE_OPTIONS} cc=${CMAKE_C_COMPILER} )
    SET( METIS_CONFIGURE_OPTIONS ${METIS_CONFIGURE_OPTIONS} gklib_path=${GKLIB_INSTALL_DIR} )
    IF ( ENABLE_SHARED AND ENABLE_STATIC )
        MESSAGE(FATAL_ERROR "Compiling metis with both static and shared libraries is not yet supported")
    ELSEIF ( ENABLE_SHARED )
        SET( METIS_CONFIGURE_OPTIONS ${METIS_CONFIGURE_OPTIONS} shared=1 )
    ELSEIF ( ENABLE_STATIC )
        SET( METIS_CONFIGURE_OPTIONS ${METIS_CONFIGURE_OPTIONS} shared=0 )
    ENDIF()
    MESSAGE("   METIS configure options: ${METIS_CONFIGURE_OPTIONS}")

    # Build metis
    ADD_TPL(
        METIS
        URL                 "${METIS_CMAKE_URL}"
        DOWNLOAD_DIR        "${METIS_CMAKE_DOWNLOAD_DIR}"
        SOURCE_DIR          "${METIS_CMAKE_SOURCE_DIR}"
        UPDATE_COMMAND      ""
        CONFIGURE_COMMAND   $(MAKE) config ${METIS_CONFIGURE_OPTIONS} VERBOSE=1
        BUILD_COMMAND       $(MAKE) -i
        BUILD_IN_SOURCE     1
        INSTALL_COMMAND     $(MAKE) install -i
        LOG_DOWNLOAD 1   LOG_UPDATE 1   LOG_CONFIGURE 1   LOG_BUILD 1   LOG_TEST 1   LOG_INSTALL 1
    )
ELSE()
    ADD_TPL_EMPTY( METIS )
ENDIF()


FILE( APPEND "${FIND_TPLS_CMAKE}" "\n# Find METIS\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "IF ( TPLs_FIND_METIS AND NOT TPLs_METIS_FOUND )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( METIS_INSTALL_DIR \"${METIS_INSTALL_DIR}\" )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( METIS_LIB_DIR \"${METIS_INSTALL_DIR}/lib\" )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    FIND_LIBRARY( METIS_LIB  NAMES metis  PATHS \"${METIS_LIB_DIR}\"  NO_DEFAULT_PATH )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    ADD_TPL_LIBRARY( METIS \"${METIS_LIB}\" )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "ENDIF()\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "\n" )


