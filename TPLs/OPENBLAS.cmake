# This will configure and build OpenBLAS
# User can configure the source path by speficfying OPENBLAS_SRC_DIR,
#    the download path by specifying OPENBLAS_URL, or the installed 
#    location by specifying OPENBLAS_INSTALL_DIR


# Check for other LAPACK packages
LIST(FIND TPL_LIST "LAPACK" index1)
LIST(FIND TPL_LIST "OPENBLAS" index2)
IF ( ${index2} GREATER ${index1} AND ${index1} GREATER "-1" )
    MESSAGE(FATAL_ERROR "OpenBLAS should not be specified with LAPACK (${index2},${index1})" )
ENDIF()


# Intialize download/src/install vars
SET( OPENBLAS_BUILD_DIR "${CMAKE_BINARY_DIR}/OPENBLAS-prefix/src/OPENBLAS-build" )
IF ( OPENBLAS_URL )
    MESSAGE("   OPENBLAS_URL = ${OPENBLAS_URL}")
    SET( OPENBLAS_SRC_DIR "${CMAKE_BINARY_DIR}/OPENBLAS-prefix/src/OPENBLAS-src" )
    SET( OPENBLAS_CMAKE_URL            "${OPENBLAS_URL}"     )
    SET( OPENBLAS_CMAKE_DOWNLOAD_DIR   "${OPENBLAS_SRC_DIR}" )
    SET( OPENBLAS_CMAKE_SOURCE_DIR     "${OPENBLAS_SRC_DIR}" )
    SET( OPENBLAS_CMAKE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/openblas" )
    SET( CMAKE_BUILD_OPENBLAS TRUE )
ELSEIF ( OPENBLAS_SRC_DIR )
    VERIFY_PATH("${OPENBLAS_SRC_DIR}")
    MESSAGE("   OPENBLAS_SRC_DIR = ${OPENBLAS_SRC_DIR}")
    SET( OPENBLAS_CMAKE_URL            ""                  )
    SET( OPENBLAS_CMAKE_DOWNLOAD_DIR   ""                  )
    SET( OPENBLAS_CMAKE_SOURCE_DIR     "${OPENBLAS_SRC_DIR}" )
    SET( OPENBLAS_CMAKE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/openblas" )
    SET( CMAKE_BUILD_OPENBLAS TRUE )
ELSEIF ( OPENBLAS_INSTALL_DIR )
    SET( OPENBLAS_CMAKE_INSTALL_DIR "${OPENBLAS_INSTALL_DIR}" )
    SET( CMAKE_BUILD_OPENBLAS FALSE )
ELSE()
    MESSAGE(FATAL_ERROR "Please specify OPENBLAS_SRC_DIR, OPENBLAS_URL, or OPENBLAS_INSTALL_DIR")
ENDIF()
SET( OPENBLAS_INSTALL_DIR "${OPENBLAS_CMAKE_INSTALL_DIR}" )
MESSAGE( "   OPENBLAS_INSTALL_DIR = ${OPENBLAS_INSTALL_DIR}" )


# Configure OpenBLAS
IF ( CMAKE_BUILD_OPENBLAS )
    SET( OPENBLAS_CONFIGURE_OPTIONS "${CMAKE_ARGS}" -DCMAKE_INSTALL_PREFIX=${OPENBLAS_CMAKE_INSTALL_DIR} -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} )
    IF ( ENABLE_SHARED )
        SET( OPENBLAS_LIBS libopenblas.so )
    ELSE()
        SET( OPENBLAS_LIBS libopenblas.a )
    ENDIF()
    SET( BLAS_LIBRARY openblas )
    SET( LAPACK_LIBRARY openblas )
    SET( BLAS_DIR    "${OPENBLAS_CMAKE_INSTALL_DIR}/lib" )
    SET( LAPACK_DIR  "${OPENBLAS_CMAKE_INSTALL_DIR}/lib" )
    SET( BLAS_LIBS   "${BLAS_DIR}/${OPENBLAS_LIBS}"  )
    SET( LAPACK_LIBS "${LAPACK_DIR}/${OPENBLAS_LIBS}" )
    SET( BLAS_LAPACK_LINK "-Wl,${LAPACK_LIBS}" )
    SET( OPENBLAS_ENV_VARS CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} FC=${CMAKE_Fortran_COMPILER} )
    SET( OPENBLAS_ENV_VARS ${OPENBLAS_ENV_VARS} AR=${CMAKE_AR})
    SET( OPENBLAS_ENV_VARS ${OPENBLAS_ENV_VARS} RANLIB=${CMAKE_RANLIB})
ELSE()
    MESSAGE(FATAL_ERROR "Not finished")
ENDIF()


# Build OpenBLAS
ADD_TPL(
    OPENBLAS
    URL                 "${OPENBLAS_CMAKE_URL}"
    DOWNLOAD_DIR        "${OPENBLAS_CMAKE_DOWNLOAD_DIR}"
    SOURCE_DIR          "${OPENBLAS_CMAKE_SOURCE_DIR}"
    UPDATE_COMMAND      ""
    CMAKE_ARGS          ${OPENBLAS_CONFIGURE_OPTIONS}
    BUILD_COMMAND       $(MAKE) ${OPENBLAS_ENV_VARS} VERBOSE=1
    BUILD_IN_SOURCE     0
    INSTALL_COMMAND     $(MAKE) PREFIX=${OPENBLAS_CMAKE_INSTALL_DIR} install
    LOG_DOWNLOAD 1   LOG_UPDATE 1   LOG_CONFIGURE 1   LOG_BUILD 1   LOG_TEST 1   LOG_INSTALL 1
)
ADD_LIBRARY(LAPACK INTERFACE)
ADD_DEPENDENCIES(LAPACK OPENBLAS)


# Add the appropriate fields to TPLs.cmake and FindTPLs.cmake
FILE( APPEND "${FIND_TPLS_CMAKE}" "\n# Find LAPACK\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "IF ( TPLs_FIND_OPENBLAS AND NOT TPLs_OPENBLAS_FOUND )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( TPLs_OPENBLAS_FOUND TRUE )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( TPLs_FIND_LAPACK TRUE )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "ENDIF()\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "IF ( TPLs_FIND_LAPACK AND NOT TPLs_LAPACK_FOUND )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( BLAS_LIBRARIES \"${BLAS_LIBS}\" )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( LAPACK_LIBRARIES \"${LAPACK_LIBS}\" )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( BLAS_DIR    \"${BLAS_DIR}\" )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( LAPACK_DIR  \"${LAPACK_DIR}\" )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( BLAS_DIRECTORY   \"${BLAS_DIR}\" )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( LAPACK_DIRECTORY \"${LAPACK_DIR}\" )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( BLAS_LIBS   \"${BLAS_LIBS}\" )\n"   )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( LAPACK_LIBS \"${LAPACK_LIBS}\" )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( BLAS_LAPACK_LINK ${BLAS_LAPACK_LINK} )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( USE_OPENBLAS true )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( OPENBLAS_DIR \"${OPENBLAS_INSTALL_DIR}\" )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( OPENBLAS_DIRECTORY \"${OPENBLAS_INSTALL_DIR}\" )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( LAPACK_FOUND $\{USE_LAPACK} )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( TPL_LIBRARIES $\{BLAS_LAPACK_LINK} $\{TPL_LIBRARIES} )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( TPLs_LAPACK_FOUND TRUE )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "ENDIF()\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "\n" )


# Create blas_lapack.h
SET( BLAS_LAPACK_HEADER "${CMAKE_INSTALL_PREFIX}/blas_lapack.h" )
FILE( WRITE "${BLAS_LAPACK_HEADER}" "// Auto-generated file to include BLAS/LAPACK headers\n" )
FILE( APPEND "${BLAS_LAPACK_HEADER}" "#include \"${OPENBLAS_INSTALL_DIR}/include/cblas.h\"\n" )
FILE( APPEND "${BLAS_LAPACK_HEADER}" "#include \"${OPENBLAS_INSTALL_DIR}/include/lapacke.h\"\n" )
FILE( APPEND "${BLAS_LAPACK_HEADER}" "#ifndef USE_BLAS\n #define USE_BLAS\n #endif\n" )
FILE( APPEND "${BLAS_LAPACK_HEADER}" "#ifndef USE_LAPACK\n #define USE_LAPACK\n #endif\n" )
FILE( APPEND "${BLAS_LAPACK_HEADER}" "#ifndef USE_OPENBLAS\n #define USE_OPENBLAS\n #endif\n" )

