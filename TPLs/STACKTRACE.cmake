# This will configure and build StackTrace
# User can configure the source path by specifying STACKTRACE_SRC_DIR
#    the download path by specifying STACKTRACE_URL, or the installed 
#    location by specifying STACKTRACE_INSTALL_DIR


# Intialize download/src/install vars
SET( STACKTRACE_BUILD_DIR "${CMAKE_BINARY_DIR}/STACKTRACE-prefix/src/STACKTRACE-build" )
IF ( STACKTRACE_URL ) 
    MESSAGE("   STACKTRACE_URL = ${STACKTRACE_URL}")
    SET( STACKTRACE_SRC_DIR "${CMAKE_BINARY_DIR}/STACKTRACE-prefix/src/STACKTRACE-src" )
    SET( STACKTRACE_CMAKE_URL            "${STACKTRACE_URL}"     )
    SET( STACKTRACE_CMAKE_DOWNLOAD_DIR   "${STACKTRACE_SRC_DIR}" )
    SET( STACKTRACE_CMAKE_DOWNLOAD_CMD   URL                )
    SET( STACKTRACE_CMAKE_SOURCE_DIR     "${STACKTRACE_SRC_DIR}" )
    SET( STACKTRACE_CMAKE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/stacktrace" )
    SET( CMAKE_BUILD_STACKTRACE TRUE )
ELSEIF ( STACKTRACE_SRC_DIR )
    VERIFY_PATH("${STACKTRACE_SRC_DIR}")
    MESSAGE("   STACKTRACE_SRC_DIR = ${STACKTRACE_SRC_DIR}")
    SET( STACKTRACE_CMAKE_URL            ""                  )
    SET( STACKTRACE_CMAKE_DOWNLOAD_DIR   ""                  )
    SET( STACKTRACE_CMAKE_DOWNLOAD_CMD   URL                 )
    SET( STACKTRACE_CMAKE_SOURCE_DIR     "${STACKTRACE_SRC_DIR}" )
    SET( STACKTRACE_CMAKE_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/stacktrace" )
    SET( CMAKE_BUILD_STACKTRACE TRUE )
ELSEIF ( STACKTRACE_INSTALL_DIR ) 
    SET( STACKTRACE_CMAKE_INSTALL_DIR "${STACKTRACE_INSTALL_DIR}" )
    SET( CMAKE_BUILD_STACKTRACE FALSE )
    # Check that the libraries exist
    FIND_LIBRARY(STACKTRACE_LIB stacktrace "${STACKTRACE_INSTALL_DIR}/lib")
    IF ( NOT STACKTRACE_LIB )
        MESSAGE(FATAL_ERROR "StackTrace library does not exist in \"${STACKTRACE_INSTALL_DIR}/lib\"")
    ENDIF()
ELSE()
    MESSAGE(FATAL_ERROR "Please specify STACKTRACE_SRC_DIR, STACKTRACE_URL, or STACKTRACE_INSTALL_DIR")
ENDIF()
FILE( MAKE_DIRECTORY "${STACKTRACE_CMAKE_INSTALL_DIR}" )
SET( STACKTRACE_INSTALL_DIR "${STACKTRACE_CMAKE_INSTALL_DIR}" )
MESSAGE( "   STACKTRACE_INSTALL_DIR = ${STACKTRACE_INSTALL_DIR}" )


# Configure optional/required TPLs
CONFIGURE_DEPENDENCIES( STACKTRACE OPTIONAL TIMER )


IF ( CMAKE_BUILD_STACKTRACE )
    # Configure StackTrace
    SET( STACKTRACE_CONFIGURE_OPTIONS "${CMAKE_ARGS}" )
    SET( STACKTRACE_CONFIGURE_OPTIONS "${STACKTRACE_CONFIGURE_OPTIONS};-DSTACKTRACE_INSTALL_DIR=${STACKTRACE_INSTALL_DIR}" )
    SET( STACKTRACE_CONFIGURE_OPTIONS "${STACKTRACE_CONFIGURE_OPTIONS};-DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}" )
    SET( STACKTRACE_CONFIGURE_OPTIONS "${STACKTRACE_CONFIGURE_OPTIONS};-DCMAKE_CXX_STANDARD=${CMAKE_CXX_STANDARD}" )
    IF ( USE_MPI )
        SET( STACKTRACE_CONFIGURE_OPTIONS "${STACKTRACE_CONFIGURE_OPTIONS};-DUSE_MPI:BOOL=TRUE" )
        IF ( MPI_SKIP_SEARCH )
            SET( STACKTRACE_CONFIGURE_OPTIONS "${STACKTRACE_CONFIGURE_OPTIONS};-DMPI_SKIP_SEARCH:BOOL=TRUE" )
            SET( STACKTRACE_CONFIGURE_OPTIONS "${STACKTRACE_CONFIGURE_OPTIONS};-DMPIEXEC=${MPIEXEC}" )
            SET( STACKTRACE_CONFIGURE_OPTIONS "${STACKTRACE_CONFIGURE_OPTIONS};-DMPI_CXX_INCLUDE_PATH=${MPI_CXX_INCLUDE_PATH}" )
            SET( STACKTRACE_CONFIGURE_OPTIONS "${STACKTRACE_CONFIGURE_OPTIONS};-DMPI_CXX_LINK_FLAGS=${MPI_CXX_LINK_FLAGS}" )
            SET( STACKTRACE_CONFIGURE_OPTIONS "${STACKTRACE_CONFIGURE_OPTIONS};-DMPI_CXX_LIBRARIES=${MPI_CXX_LIBRARIES}" )
        ENDIF()
    ENDIF()
    LIST(FIND TPL_LIST "TIMER" index)
    IF ( TIMER_CONFIGURED )
        SET( STACKTRACE_CONFIGURE_OPTIONS "${STACKTRACE_CONFIGURE_OPTIONS};-DTIMER_DIRECTORY=${TIMER_INSTALL_DIR}" )
    ENDIF()
    ADD_TPL(
        STACKTRACE
        URL                 "${STACKTRACE_CMAKE_URL}"
        DOWNLOAD_DIR        "${STACKTRACE_CMAKE_DOWNLOAD_DIR}"
        SOURCE_DIR          "${STACKTRACE_CMAKE_SOURCE_DIR}"
        UPDATE_COMMAND      ""
        BUILD_IN_SOURCE     0
        INSTALL_DIR         "${STACKTRACE_INSTALL_DIR}"
        CMAKE_ARGS          "${STACKTRACE_CONFIGURE_OPTIONS}"
        BUILD_COMMAND       $(MAKE) install VERBOSE=1
        LOG_DOWNLOAD 1   LOG_UPDATE 1   LOG_CONFIGURE 1   LOG_BUILD 1   LOG_TEST 1   LOG_INSTALL 1
    )
ENDIF()

# Add the appropriate fields to FindTPLs.cmake
FILE( APPEND "${FIND_TPLS_CMAKE}" "\n# Find STACKTRACE\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "IF ( TPLs_FIND_STACKTRACE AND NOT TPL_FOUND_STACKTRACE )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( CMAKE_MODULE_PATH ${STACKTRACE_INSTALL_DIR} $\{CMAKE_MODULE_PATH} )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    FIND_PACKAGE( StackTrace )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( TPL_INCLUDE_DIRS $\{StackTrace_INCLUDE_DIRS} $\{TPL_INCLUDE_DIRS} )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( TPL_LIBRARIES $\{StackTrace_LIBRARIES} $\{TPL_LIBRARIES} )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "    SET( TPL_FOUND_STACKTRACE $\{StackTrace_FOUND} )\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "ENDIF()\n" )
FILE( APPEND "${FIND_TPLS_CMAKE}" "\n" )
